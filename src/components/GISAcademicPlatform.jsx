import React, { useState } from 'react';
import {
    Search, MessageCircle, Users, BookOpen, Award, Bell, Plus, Heart,
    Share2, Eye, Download, Upload, Calendar, MapPin, Globe, TrendingUp,
    Star, Filter, UserPlus, MessageSquare, Database, // <-- Added missing Database icon
    BrainCircuit, Lightbulb, GitBranchPlus, Briefcase // <-- 1. Ê∑ªÂä†Êñ∞ÂõæÊ†á
} from 'lucide-react';
import AcademicProfilePage from "./AcademicProfilePage";
import ProjectSpacePage from "./ProjectSpacePage";
import ProjectDashboardPage from "./ProjectDashboardPage";

// --- Sub-components are now defined outside the main component for performance ---

const FeedComponent = ({ posts, selectedFilter, setSelectedFilter, toggleLike }) => (
    <div className="space-y-6">
        {/* Create Post */}
        <div className="bg-white rounded-lg shadow-sm border p-6">
            <div className="flex items-center space-x-4 mb-4">
                <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white text-xl">
                    üë§
                </div>
                <div className="flex-1">
                    <textarea
                        placeholder="ÂàÜ‰∫´‰Ω†ÁöÑÁ†îÁ©∂ÂèëÁé∞„ÄÅÊèêÂá∫Â≠¶ÊúØÈóÆÈ¢òÊàñÂØªÊâæÂêà‰Ωú‰ºô‰º¥..."
                        className="w-full p-3 border border-gray-200 rounded-lg resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                        rows="3"
                    />
                </div>
            </div>
            <div className="flex justify-between items-center">
                <div className="flex space-x-3">
                    <button className="flex items-center space-x-2 px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg">
                        <Upload className="w-4 h-4" />
                        <span className="text-sm">‰∏ä‰º†Êï∞ÊçÆ</span>
                    </button>
                    <button className="flex items-center space-x-2 px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg">
                        <BookOpen className="w-4 h-4" />
                        <span className="text-sm">ËÆ∫Êñá</span>
                    </button>
                    <button className="flex items-center space-x-2 px-3 py-2 text-gray-600 hover:bg-gray-50 rounded-lg">
                        <Users className="w-4 h-4" />
                        <span className="text-sm">Âêà‰Ωú</span>
                    </button>
                </div>
                <button className="bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-lg transition-colors">
                    ÂèëÂ∏É
                </button>
            </div>
        </div>

        {/* Filter Bar */}
        <div className="bg-white rounded-lg shadow-sm border p-4">
            <div className="flex items-center justify-between">
                <div className="flex items-center space-x-4">
                    <span className="text-sm font-medium text-gray-700">Á≠õÈÄâ:</span>
                    {['all', 'research', 'collaboration', 'tool', 'question'].map(filter => (
                        <button
                            key={filter}
                            onClick={() => setSelectedFilter(filter)}
                            className={`px-3 py-1 rounded-full text-sm transition-colors ${
  selectedFilter === filter
      ? 'bg-blue-500 text-white'
      : 'bg-gray-100 text-gray-600 hover:bg-gray-200'
}`}
                        >
                            {filter === 'all' ? 'ÂÖ®ÈÉ®' :
                                filter === 'research' ? 'Á†îÁ©∂ÊàêÊûú' :
                                    filter === 'collaboration' ? 'Âêà‰ΩúÈÇÄËØ∑' :
                                        filter === 'tool' ? 'Â∑•ÂÖ∑ÂàÜ‰∫´' : 'Â≠¶ÊúØÈóÆÁ≠î'}
                        </button>
                    ))}
                </div>
                <button className="text-gray-500 hover:text-gray-700">
                    <Filter className="w-4 h-4" />
                </button>
            </div>
        </div>

        {/* Posts Feed */}
        <div className="space-y-6">
            {posts.map(post => (
                <div key={post.id} className="bg-white rounded-lg shadow-sm border hover:shadow-md transition-shadow">
                    {/* Post Header */}
                    <div className="p-6 pb-4">
                        <div className="flex items-start justify-between mb-4">
                            <div className="flex items-center space-x-3">
                                <div className="w-12 h-12 bg-gradient-to-r from-indigo-500 to-purple-500 rounded-full flex items-center justify-center text-white text-xl">
                                    {post.author.avatar}
                                </div>
                                <div>
                                    <div className="flex items-center space-x-2">
                                        <h4 className="font-semibold text-gray-900">{post.author.name}</h4>
                                        <span className="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full">
                                            {post.author.level}
                                        </span>
                                    </div>
                                    <p className="text-sm text-gray-600">{post.author.affiliation}</p>
                                    <p className="text-xs text-gray-500">{post.timestamp}</p>
                                </div>
                            </div>
                            <div className="flex items-center space-x-2">
                                {post.hasCode && (
                                    <span className="px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full">‰ª£Á†Å</span>
                                )}
                                {post.hasData && (
                                    <span className="px-2 py-1 bg-orange-100 text-orange-800 text-xs rounded-full">Êï∞ÊçÆ</span>
                                )}
                            </div>
                        </div>

                        <h3 className="text-lg font-semibold text-gray-900 mb-2">{post.title}</h3>
                        <p className="text-gray-700 mb-4">{post.content}</p>

                        {/* Tags */}
                        <div className="flex flex-wrap gap-2 mb-4">
                            {post.tags.map((tag, index) => (
                                <span key={index} className="px-2 py-1 bg-gray-100 text-gray-700 text-sm rounded">
                                    #{tag}
                                </span>
                            ))}
                        </div>
                    </div>

                    {/* Post Actions */}
                    <div className="px-6 py-4 bg-gray-50 border-t flex items-center justify-between">
                        <div className="flex items-center space-x-6">
                            <button
                                onClick={() => toggleLike(post.id)}
                                className="flex items-center space-x-2 text-gray-600 hover:text-red-500 transition-colors"
                            >
                                <Heart className="w-4 h-4" />
                                <span className="text-sm">{post.likes}</span>
                            </button>
                            <button className="flex items-center space-x-2 text-gray-600 hover:text-blue-500 transition-colors">
                                <MessageCircle className="w-4 h-4" />
                                <span className="text-sm">{post.comments}</span>
                            </button>
                            <button className="flex items-center space-x-2 text-gray-600 hover:text-green-500 transition-colors">
                                <Share2 className="w-4 h-4" />
                                <span className="text-sm">{post.shares}</span>
                            </button>
                        </div>
                        <div className="flex items-center space-x-2 text-gray-500 text-sm">
                            <Eye className="w-4 h-4" />
                            <span>{post.views}</span>
                        </div>
                    </div>
                </div>
            ))}
        </div>
    </div>
);

const ExpertsComponent = ({ experts }) => (
    <div className="space-y-6">
        <div className="flex justify-between items-center">
            <h2 className="text-2xl font-bold text-gray-800">GISÈ¢ÜÂüü‰∏ìÂÆ∂</h2>
            <div className="flex items-center space-x-4">
                <select className="border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500">
                    <option>ÊåâÂΩ±ÂìçÂäõÊéíÂ∫è</option>
                    <option>ÊåâËÆ∫ÊñáÊï∞Èáè</option>
                    <option>ÊåâÂÖ≥Ê≥®Êï∞</option>
                </select>
            </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {experts.map(expert => (
                <div key={expert.id} className="bg-white rounded-lg shadow-sm border p-6 hover:shadow-md transition-shadow">
                    <div className="flex items-start justify-between mb-4">
                        <div className="flex items-center space-x-4">
                            <div className="w-16 h-16 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center text-white text-2xl">
                                {expert.avatar}
                            </div>
                            <div>
                                <h3 className="text-lg font-semibold text-gray-900">{expert.name}</h3>
                                <p className="text-gray-600">{expert.affiliation}</p>
                                <p className="text-sm text-gray-500">{expert.specialization}</p>
                            </div>
                        </div>
                        <button className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg text-sm transition-colors flex items-center space-x-2">
                            <UserPlus className="w-4 h-4" />
                            <span>ÂÖ≥Ê≥®</span>
                        </button>
                    </div>

                    <div className="grid grid-cols-3 gap-4 text-center">
                        <div>
                            <div className="text-2xl font-bold text-blue-600">{expert.papers}</div>
                            <div className="text-sm text-gray-500">ËÆ∫ÊñáÊï∞</div>
                        </div>
                        <div>
                            <div className="text-2xl font-bold text-green-600">{expert.hIndex}</div>
                            <div className="text-sm text-gray-500">HÊåáÊï∞</div>
                        </div>
                        <div>
                            <div className="text-2xl font-bold text-purple-600">{expert.followers}</div>
                            <div className="text-sm text-gray-500">ÂÖ≥Ê≥®ËÄÖ</div>
                        </div>
                    </div>
                </div>
            ))}
        </div>
    </div>
);

const ConferencesComponent = ({ conferences }) => (
    <div className="space-y-6">
        <div className="flex justify-between items-center">
            <h2 className="text-2xl font-bold text-gray-800">Â≠¶ÊúØ‰ºöËÆÆ</h2>
            <button className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg transition-colors">
                Êèê‰∫§‰ºöËÆÆ‰ø°ÊÅØ
            </button>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {conferences.map(conference => (
                <div key={conference.id} className="bg-white rounded-lg shadow-sm border p-6 hover:shadow-md transition-shadow">
                    <div className="flex items-start justify-between mb-4">
                        <div>
                            <h3 className="text-lg font-semibold text-gray-900 mb-2">{conference.name}</h3>
                            <div className="space-y-2 text-sm text-gray-600">
                                <div className="flex items-center space-x-2">
                                    <Calendar className="w-4 h-4" />
                                    <span>{conference.date}</span>
                                </div>
                                <div className="flex items-center space-x-2">
                                    <MapPin className="w-4 h-4" />
                                    <span>{conference.location}</span>
                                </div>
                                <div className="flex items-center space-x-2">
                                    <Users className="w-4 h-4" />
                                    <span>{conference.attendees} È¢ÑËÆ°ÂèÇ‰ºö</span>
                                </div>
                            </div>
                        </div>
                        <span className="px-3 py-1 bg-blue-100 text-blue-800 text-sm rounded-full">
                            {conference.type}
                        </span>
                    </div>

                    <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-3 mb-4">
                        <p className="text-sm text-yellow-800">
                            <strong>ÊäïÁ®øÊà™Ê≠¢:</strong> {conference.deadline}
                        </p>
                    </div>

                    <div className="flex space-x-3">
                        <button className="flex-1 bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded-lg text-sm transition-colors">
                            Êü•ÁúãËØ¶ÊÉÖ
                        </button>
                        <button className="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 py-2 px-4 rounded-lg text-sm transition-colors">
                            Ê∑ªÂä†Âà∞Êó•ÂéÜ
                        </button>
                    </div>
                </div>
            ))}
        </div>
    </div>
);

const DatasetsComponent = ({ datasets }) => (
    <div className="space-y-6">
        <div className="flex justify-between items-center">
            <h2 className="text-2xl font-bold text-gray-800">ÂºÄÊ∫êÊï∞ÊçÆÂ∫ì</h2>
            <div className="flex items-center space-x-4">
                <button className="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg transition-colors flex items-center space-x-2">
                    <Upload className="w-4 h-4" />
                    <span>Ë¥°ÁåÆÊï∞ÊçÆ</span>
                </button>
                <button className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg transition-colors">
                    Áî≥ËØ∑Êï∞ÊçÆÈõÜ
                </button>
            </div>
        </div>

        {/* Search and Filter Bar */}
        <div className="bg-white rounded-lg shadow-sm border p-6">
            <div className="flex flex-col lg:flex-row gap-4">
                <div className="flex-1">
                    <div className="relative">
                        <Search className="absolute left-3 top-3 w-4 h-4 text-gray-400" />
                        <input
                            type="text"
                            placeholder="ÊêúÁ¥¢Êï∞ÊçÆÈõÜ„ÄÅÊ†áÁ≠æ„ÄÅ‰ΩúËÄÖ..."
                            className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                        />
                    </div>
                </div>
                <div className="flex gap-2">
                    <select className="border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500">
                        <option>ÂÖ®ÈÉ®Á±ªÂûã</option>
                        <option>Áü¢ÈáèÊï∞ÊçÆ</option>
                        <option>Ê†ÖÊ†ºÊï∞ÊçÆ</option>
                        <option>Â∑•ÂÖ∑‰ª£Á†Å</option>
                        <option>Ê®°ÂûãÊï∞ÊçÆ</option>
                    </select>
                    <select className="border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500">
                        <option>Êåâ‰∏ãËΩΩÈáè</option>
                        <option>ÊåâÊõ¥Êñ∞Êó∂Èó¥</option>
                        <option>ÊåâËØÑÂàÜ</option>
                        <option>ÊåâÂ§ßÂ∞è</option>
                    </select>
                </div>
            </div>

            {/* Category Filters */}
            <div className="flex flex-wrap gap-2 mt-4">
                {['ÈÅ•ÊÑüÂΩ±ÂÉè', 'Áü¢ÈáèÊï∞ÊçÆ', 'ÁªüËÆ°Êï∞ÊçÆ', 'Ê∞îË±°Êï∞ÊçÆ', '‰∫∫Âè£Êï∞ÊçÆ', '‰∫§ÈÄöÊï∞ÊçÆ', 'ÁéØÂ¢ÉÊï∞ÊçÆ', 'Â∑•ÂÖ∑‰ª£Á†Å'].map(category => (
                    <button
                        key={category}
                        className="px-3 py-1 bg-gray-100 hover:bg-blue-100 hover:text-blue-700 text-gray-700 rounded-full text-sm transition-colors"
                    >
                        {category}
                    </button>
                ))}
            </div>
        </div>

        {/* Featured Datasets */}
        <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg border p-6">
            <h3 className="text-lg font-semibold text-gray-800 mb-4 flex items-center">
                <Star className="w-5 h-5 text-yellow-500 mr-2" />
                Á≤æÈÄâÊï∞ÊçÆÈõÜ
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                {datasets.slice(0, 3).map(dataset => (
                    <div key={dataset.id} className="bg-white rounded-lg p-4 shadow-sm">
                        <h4 className="font-medium text-gray-900 mb-2 text-sm">{dataset.title}</h4>
                        <div className="flex items-center justify-between text-xs text-gray-500">
                            <span>{dataset.downloads} ‰∏ãËΩΩ</span>
                            <div className="flex items-center">
                                <Star className="w-3 h-3 text-yellow-400 mr-1" />
                                <span>{dataset.quality}</span>
                            </div>
                        </div>
                    </div>
                ))}
            </div>
        </div>

        {/* Datasets Grid */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {datasets.map(dataset => (
                <div key={dataset.id} className="bg-white rounded-lg shadow-sm border hover:shadow-md transition-shadow">
                    <div className="p-6">
                        {/* Header */}
                        <div className="flex items-start justify-between mb-4">
                            <div className="flex-1">
                                <div className="flex items-center space-x-2 mb-2">
                                    <h3 className="text-lg font-semibold text-gray-900">{dataset.title}</h3>
                                    {dataset.documentation && (
                                        <span className="px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full">
                                            ÊúâÊñáÊ°£
                                        </span>
                                    )}
                                </div>
                                <p className="text-sm text-gray-600 mb-3">{dataset.description}</p>

                                {/* Author and Date */}
                                <div className="flex items-center justify-between text-xs text-gray-500 mb-3">
                                    <span>Ë¥°ÁåÆËÄÖ: {dataset.author}</span>
                                    <span>Êõ¥Êñ∞: {dataset.lastUpdated}</span>
                                </div>
                            </div>

                            <div className="flex items-center space-x-2 ml-4">
                                <div className="text-right">
                                    <div className="flex items-center space-x-1 text-yellow-500">
                                        <Star className="w-4 h-4 fill-current" />
                                        <span className="text-sm font-medium">{dataset.quality}</span>
                                    </div>
                                    <div className="text-xs text-gray-500">{dataset.downloads} ‰∏ãËΩΩ</div>
                                </div>
                            </div>
                        </div>

                        {/* Tags */}
                        <div className="flex flex-wrap gap-2 mb-4">
                            {dataset.tags.map((tag, index) => (
                                <span key={index} className="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded">
                                    #{tag}
                                </span>
                            ))}
                        </div>

                        {/* Technical Details */}
                        <div className="bg-gray-50 rounded-lg p-3 mb-4">
                            <div className="grid grid-cols-2 gap-3 text-sm">
                                <div>
                                    <span className="text-gray-600">Â§ßÂ∞è:</span>
                                    <span className="ml-2 font-medium">{dataset.size}</span>
                                </div>
                                <div>
                                    <span className="text-gray-600">ËÆ∏ÂèØ:</span>
                                    <span className="ml-2 font-medium">{dataset.license}</span>
                                </div>
                            </div>

                            <div className="mt-2">
                                <span className="text-gray-600 text-sm">Ê†ºÂºè:</span>
                                <div className="flex flex-wrap gap-1 mt-1">
                                    {dataset.format.map((fmt, index) => (
                                        <span key={index} className="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded">
                                            {fmt}
                                        </span>
                                    ))}
                                </div>
                            </div>
                        </div>

                        {/* Actions */}
                        <div className="flex space-x-3">
                            <button className="flex-1 bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded-lg text-sm transition-colors flex items-center justify-center space-x-2">
                                <Download className="w-4 h-4" />
                                <span>‰∏ãËΩΩ</span>
                            </button>
                            <button className="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 py-2 px-4 rounded-lg text-sm transition-colors">
                                È¢ÑËßà
                            </button>
                            <button className="px-4 py-2 border border-gray-300 hover:bg-gray-50 rounded-lg text-sm transition-colors">
                                <Heart className="w-4 h-4" />
                            </button>
                            <button className="px-4 py-2 border border-gray-300 hover:bg-gray-50 rounded-lg text-sm transition-colors">
                                <Share2 className="w-4 h-4" />
                            </button>
                        </div>
                    </div>

                    {/* Download Stats */}
                    <div className="px-6 py-3 bg-gray-50 border-t text-xs text-gray-600">
                        <div className="flex justify-between items-center">
                            <span>Êú¨Êúà‰∏ãËΩΩ {Math.floor(dataset.downloads * 0.3)} Ê¨°</span>
                            <div className="flex items-center space-x-4">
                                <span>{dataset.likes} ÁÇπËµû</span>
                                <span>5 ËØÑËÆ∫</span>
                            </div>
                        </div>
                    </div>
                </div>
            ))}
        </div>

        {/* Load More */}
        <div className="text-center">
            <button className="bg-white border border-gray-300 hover:bg-gray-50 text-gray-700 px-6 py-3 rounded-lg transition-colors">
                Âä†ËΩΩÊõ¥Â§öÊï∞ÊçÆÈõÜ
            </button>
        </div>
    </div>
);

// This component was previously causing a syntax error.
const DiscussionsComponent = ({ discussions }) => (
    <div className="space-y-6">
        <div className="flex justify-between items-center">
            <h2 className="text-2xl font-bold text-gray-800">Â≠¶ÊúØËÆ®ËÆ∫</h2>
            <button className="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg transition-colors flex items-center space-x-2">
                <Plus className="w-4 h-4" />
                <span>ÂèëËµ∑ËÆ®ËÆ∫</span>
            </button>
        </div>

        <div className="bg-white rounded-lg shadow-sm border">
            <div className="p-4 border-b">
                <div className="flex items-center space-x-4">
                    <button className="px-4 py-2 bg-blue-500 text-white rounded-lg text-sm">ÁÉ≠Èó®</button>
                    <button className="px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg text-sm">ÊúÄÊñ∞</button>
                    <button className="px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg text-sm">Êú™Ëß£ÂÜ≥</button>
                </div>
            </div>

            <div className="divide-y">
                {discussions.map(discussion => (
                    <div key={discussion.id} className="p-6 hover:bg-gray-50 transition-colors">
                        <div className="flex items-start justify-between">
                            <div className="flex-1">
                                <h3 className="text-lg font-medium text-gray-900 mb-2 hover:text-blue-600 cursor-pointer">
                                    {discussion.title}
                                </h3>
                                <div className="flex items-center space-x-4 text-sm text-gray-500 mb-3">
                                    <span>by {discussion.author}</span>
                                    <span>{discussion.lastActivity}</span>
                                </div>
                                <div className="flex flex-wrap gap-2">
                                    {discussion.tags.map((tag, index) => (
                                        <span key={index} className="px-2 py-1 bg-gray-100 text-gray-700 text-xs rounded">
                                            {tag}
                                        </span>
                                    ))}
                                </div>
                            </div>
                            <div className="text-right">
                                <div className="flex items-center space-x-2 text-gray-500">
                                    <MessageSquare className="w-4 h-4" />
                                    <span className="text-sm font-medium">{discussion.replies}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                ))}
            </div>
        </div>
    </div>
);

// +++ 2. Êñ∞Â¢ûÔºöÊô∫ËÉΩÊé®Ëçê‰æßËæπÊ†èÁªÑ‰ª∂ +++
const RecommendationSidebar = ({ recommendations, collaborators, knowledgeGraph }) => (
    <div className="bg-white rounded-lg shadow-sm border p-4">
        <h3 className="font-semibold text-gray-800 mb-4 flex items-center">
            <BrainCircuit className="w-5 h-5 mr-2 text-blue-600" />
            Êô∫ËÉΩÊé®Ëçê
        </h3>
        <div className="space-y-5">
            {/* ‰∏™ÊÄßÂåñÂÜÖÂÆπÊé®Ëçê */}
            <div>
                <h4 className="text-sm font-medium text-gray-700 mb-2 flex items-center">
                    <Lightbulb className="w-4 h-4 mr-2 text-yellow-500" />
                    ‰∏∫‰Ω†Êé®Ëçê
                </h4>
                <div className="space-y-3 text-sm">
                    <div className="p-3 bg-gray-50 rounded-lg hover:bg-gray-100 cursor-pointer">
                        <p className="font-medium text-gray-800 truncate">{recommendations.paper.title}</p>
                        <p className="text-xs text-gray-500">Áõ∏ÂÖ≥ËÆ∫Êñá</p>
                    </div>
                    <div className="p-3 bg-gray-50 rounded-lg hover:bg-gray-100 cursor-pointer">
                        <p className="font-medium text-gray-800">{recommendations.expert.name} <span className="text-gray-500 font-normal">({recommendations.expert.affiliation})</span></p>
                        <p className="text-xs text-gray-500">Áõ∏ÂÖ≥Â≠¶ËÄÖ</p>
                    </div>
                    <div className="p-3 bg-gray-50 rounded-lg hover:bg-gray-100 cursor-pointer">
                        <p className="font-medium text-gray-800 truncate">{recommendations.dataset.title}</p>
                        <p className="text-xs text-gray-500">Áõ∏ÂÖ≥Êï∞ÊçÆÈõÜ</p>
                    </div>
                </div>
            </div>

            {/* Áõ∏‰ººÁ†îÁ©∂ËÄÖÂåπÈÖç */}
            <div>
                <h4 className="text-sm font-medium text-gray-700 mb-2">
                    ÊΩúÂú®Âêà‰ΩúËÄÖ
                </h4>
                <div className="space-y-2 text-sm">
                    {collaborators.map(user => (
                        <div key={user.id} className="flex items-center space-x-3">
                            <div className="w-8 h-8 bg-gradient-to-r from-green-400 to-blue-400 rounded-full flex items-center justify-center text-white text-sm">
                                {user.avatar}
                            </div>
                            <div>
                                <p className="font-medium text-gray-800">{user.name}</p>
                                <p className="text-xs text-gray-500">{user.specialization}</p>
                            </div>
                        </div>
                    ))}
                </div>
            </div>

            {/* Êô∫ËÉΩÊñáÁåÆÂÖ≥ËÅî (Áü•ËØÜÂõæË∞±ÁÆÄÂåñÁâà) */}
            <div>
                <h4 className="text-sm font-medium text-gray-700 mb-2 flex items-center">
                    <GitBranchPlus className="w-4 h-4 mr-2 text-purple-600" />
                    Á†îÁ©∂ËÑâÁªú
                </h4>
                <div className="flex flex-wrap gap-2">
                    {knowledgeGraph.map(topic => (
                        <span key={topic} className="px-2 py-1 bg-purple-100 text-purple-800 text-xs rounded-full cursor-pointer hover:bg-purple-200">
                            {topic}
                        </span>
                    ))}
                </div>
            </div>
        </div>
    </div>
);

const GISAcademicPlatform = () => {
    // --- State declarations moved to the top ---
    const [activeTab, setActiveTab] = useState('feed');
    const [searchQuery, setSearchQuery] = useState('');
    const [selectedFilter, setSelectedFilter] = useState('all');

    // 1. Êñ∞Â¢ûstateÊù•ÊéßÂà∂È°µÈù¢ÂàáÊç¢
    const [currentPage, setCurrentPage] = useState('dashboard');
    const [activeProject, setActiveProject] = useState(null); // Â≠òÂÇ®ÂΩìÂâçÊ≠£Âú®Êü•ÁúãÁöÑÈ°πÁõÆ


    // 2. Êñ∞Â¢ûËØ¶Â∞ΩÁöÑ‰∏™‰∫∫‰∏ªÈ°µÊ®°ÊãüÊï∞ÊçÆ
    const [mockProfileData, setMockProfileData] = useState({
        userInfo: { name: 'ÈôàÈô¢Â£´', avatar: 'üèÜ', title: 'Âú∞ÁêÜ‰ø°ÊÅØÁßëÂ≠¶ÂÆ∂ÔºåÊïôÊéà', affiliation: '‰∏≠ÁßëÈô¢', bio: 'Ëá¥Âäõ‰∫éÈ´òÂÖâË∞±ÈÅ•ÊÑü‰∏éÁ©∫Èó¥ÂàÜÊûêÁêÜËÆ∫Á†îÁ©∂Ë∂ÖËøá20Âπ¥Ôºå‰∏ìÊ≥®‰∫éÂ∞ÜÊ∑±Â∫¶Â≠¶‰π†Â∫îÁî®‰∫éÂú∞ÁêÜÁ©∫Èó¥ÈóÆÈ¢ò„ÄÇ', researchInterests: ['ÈÅ•ÊÑü', 'GIS', 'Á©∫Èó¥ÂàÜÊûê', 'Ê∑±Â∫¶Â≠¶‰π†', 'ÂüéÂ∏ÇËÆ°ÁÆó'] },
        metrics: { publications: 156, citations: 8932, hIndex: 45 },
        publications: [
            { id: 1, title: 'Âü∫‰∫éÊ∑±Â∫¶Â≠¶‰π†ÁöÑÈÅ•ÊÑüÂΩ±ÂÉèÂúüÂú∞Ë¶ÜÁõñÂàÜÁ±ªÊñ∞ÊñπÊ≥ï', authors: ['ÈôàÈô¢Â£´', 'Âº†ÊïôÊéà', 'ÊùéÂçöÂ£´'], journal: 'ÈÅ•ÊÑüÂ≠¶Êä•', year: 2023, citations: 120 },
            { id: 2, title: 'ÂüéÂ∏ÇÁÉ≠Â≤õÊïàÂ∫îÁöÑÂ§öÂ∞∫Â∫¶Êó∂Á©∫ÊºîÂåñÂàÜÊûê', authors: ['ÈôàÈô¢Â£´', 'ÂàòÊïôÊéà'], journal: 'Âú∞ÁêÜÁ†îÁ©∂', year: 2022, citations: 254 },
            { id: 3, title: '‰∏ÄÁßçÈ´òÊïàÁöÑÊó∂Á©∫Êï∞ÊçÆÁ¥¢ÂºïÁªìÊûÑ', authors: ['ÈôàÈô¢Â£´', 'ÁéãÁ†îÁ©∂Âëò'], journal: 'Journal of Geoinformatics', year: 2021, citations: 410 },
        ],
        timelineEvents: [
            { date: '2023-11-20', title: 'ÂèëË°®ËÆ∫Êñá', description: 'Âú®„ÄäÈÅ•ÊÑüÂ≠¶Êä•„ÄãÂèëË°®ÂÖ≥‰∫éÊ∑±Â∫¶Â≠¶‰π†ÂúüÂú∞Ë¶ÜÁõñÂàÜÁ±ªÁöÑÁ†îÁ©∂„ÄÇ' },
            { date: '2022-05-10', title: 'Ëé∑ÂæóÂõΩÂÆ∂ÁßëÊäÄËøõÊ≠•Â•ñ', description: 'Âõ†Âú®ÂüéÂ∏ÇÊ∞îÂÄôÁ†îÁ©∂‰∏≠ÁöÑÁ™ÅÂá∫Ë¥°ÁåÆËç£Ëé∑‰∫åÁ≠âÂ•ñ„ÄÇ' },
            { date: '2020-09-01', title: 'ÊàêÁ´ãÊô∫ÊÖßÂüéÂ∏ÇÂÆûÈ™åÂÆ§', description: 'È¢ÜÂØºÊàêÁ´ã‰∫Ü‰∏ìÊ≥®‰∫éÂüéÂ∏ÇËÆ°ÁÆó‰∏éGIS‰∫§ÂèâÂ≠¶ÁßëÁöÑÂÆûÈ™åÂÆ§„ÄÇ' },
        ],
// === Êñ∞Â¢û1Ôºö‰∏∫ÂèØËßÜÂåñËÆæËÆ°ÁöÑÂõæÊï∞ÊçÆÁªìÊûÑ ===
        collaborationGraph: {
            // "nodes" ‰ª£Ë°®Âõæ‰∏≠ÁöÑÊØè‰∏™ÁÇπ (Â≠¶ËÄÖ)
            nodes: [
                { id: 'center', name: 'ÈôàÈô¢Â£´', avatar: 'üèÜ', isCenter: true, x: 250, y: 150 },
                { id: 'user2', name: 'ÂàòÊïôÊéà', avatar: 'üéØ', x: 100, y: 50 },
                { id: 'user3', name: 'Âº†ÊïôÊéà', avatar: 'üë®‚Äçüè´', x: 400, y: 50 },
                { id: 'user4', name: 'ÊùéÂçöÂ£´', avatar: 'üë©‚Äçüî¨', x: 80, y: 250 },
                { id: 'user5', name: 'ÁéãÁ†îÁ©∂Áîü', avatar: 'üéì', x: 420, y: 250 },
            ],
            // "links" ‰ª£Ë°®ÁÇπ‰∏éÁÇπ‰πãÈó¥ÁöÑËøûÁ∫ø (Âêà‰ΩúÂÖ≥Á≥ª)
            links: [
                { source: 'center', target: 'user2', strength: 5 }, // strength Ë∂äÂ§ßÔºåÁ∫øË∂äÁ≤ó
                { source: 'center', target: 'user3', strength: 4 },
                { source: 'center', target: 'user4', strength: 5 },
                { source: 'center', target: 'user5', strength: 2 },
                { source: 'user2', target: 'user4', strength: 3 }, // Â≠¶ËÄÖ‰πãÈó¥‰πüÂèØËÉΩÊúâÂêà‰Ωú
            ]
        },
        // === 3. Êñ∞Â¢ûÁöÑÈ°πÁõÆÊï∞ÊçÆ ===
        projects: [
            {
                id: 'proj-01',
                title: 'ÂüéÂ∏ÇÁÉ≠Â≤õÊïàÂ∫îÂ§öÂ∞∫Â∫¶ÂàÜÊûêÈ°πÁõÆ',
                status: 'ËøõË°å‰∏≠', // 'ËøõË°å‰∏≠' Êàñ 'Â∑≤ÂÆåÊàê'
                role: 'Ë¥üË¥£‰∫∫', // 'Ë¥üË¥£‰∫∫', 'Ê†∏ÂøÉÊàêÂëò' Á≠â
                description: '‰∏Ä‰∏™ÂÖ≥‰∫éÂüéÂ∏ÇÁÉ≠Â≤õÊïàÂ∫îÁöÑË∑®ÂüéÂ∏ÇÊØîËæÉÁ†îÁ©∂ÔºåÊó®Âú®Êé¢Á¥¢‰∏çÂêåÂ∞∫Â∫¶‰∏ãÁöÑÂΩ±ÂìçÂõ†Â≠ê„ÄÇ'
            },
            {
                id: 'proj-02',
                title: 'GeoAIÂºÄÊ∫êÂ∑•ÂÖ∑ÂåÖÂºÄÂèë',
                status: 'ËøõË°å‰∏≠',
                role: 'Ê†∏ÂøÉÊàêÂëò',
                description: '‰∏éÊ∏ÖÂçéÂ§ßÂ≠¶Âêà‰ΩúÔºåÂÖ±ÂêåÂºÄÂèë‰∏Ä‰∏™Èù¢ÂêëGISÈ¢ÜÂüüÁöÑPythonËá™Âä®ÂåñÂ§ÑÁêÜÂ∑•ÂÖ∑ÂåÖ„ÄÇ'
            },
            {
                id: 'proj-03',
                title: '2000-2020Âπ¥‰∏≠ÂõΩÂúüÂú∞Ë¶ÜÁõñÂèòÂåñÁ†îÁ©∂',
                status: 'Â∑≤ÂÆåÊàê',
                role: 'Ë¥üË¥£‰∫∫',
                description: 'Âü∫‰∫éÈïøÊó∂Èó¥Â∫èÂàóÈÅ•ÊÑüÂΩ±ÂÉèÔºåÂÆåÊàê‰∫ÜÂØπËøáÂéª20Âπ¥‰∏≠ÂõΩÂúüÂú∞Ë¶ÜÁõñÂèòÂåñÁöÑÂà∂Âõæ‰∏éÂàÜÊûê„ÄÇ'
            }
        ]
    });


    const [posts, setPosts] = useState([
        { id: 1, author: { name: 'Âº†ÊïôÊéà', avatar: 'üë®‚Äçüè´', affiliation: 'Âåó‰∫¨Â§ßÂ≠¶Âú∞ÁêÜÁ≥ª', level: 'ÊïôÊéà' }, title: 'Âü∫‰∫éÊ∑±Â∫¶Â≠¶‰π†ÁöÑÈÅ•ÊÑüÂΩ±ÂÉèÂúüÂú∞Ë¶ÜÁõñÂàÜÁ±ªÊñ∞ÊñπÊ≥ï', content: 'Êàë‰ª¨Âõ¢ÈòüÊúÄÊñ∞ÂºÄÂèë‰∫Ü‰∏ÄÁßçÁªìÂêàCNNÂíåTransformerÁöÑÊ∑∑ÂêàÊû∂ÊûÑÔºåÂú®Landsat-8Êï∞ÊçÆ‰∏äÂèñÂæó‰∫Ü95.2%ÁöÑÂàÜÁ±ªÁ≤æÂ∫¶...', tags: ['ÈÅ•ÊÑü', 'Ê∑±Â∫¶Â≠¶‰π†', 'ÂúüÂú∞Ë¶ÜÁõñ', 'CNN'], timestamp: '2Â∞èÊó∂Ââç', likes: 24, comments: 8, shares: 5, views: 156, hasCode: true, hasData: true, type: 'research' },
        { id: 2, author: { name: 'ÊùéÂçöÂ£´', avatar: 'üë©‚Äçüî¨', affiliation: '‰∏≠ÁßëÈô¢ÈÅ•ÊÑüÊâÄ', level: 'ÂâØÁ†îÁ©∂Âëò' }, title: 'ÂØªÊ±ÇÂêà‰ΩúÔºöÂüéÂ∏ÇÁÉ≠Â≤õÊïàÂ∫îÂ§öÂ∞∫Â∫¶ÂàÜÊûêÈ°πÁõÆ', content: 'Ê≠£Âú®Á≠πÂ§á‰∏Ä‰∏™ÂÖ≥‰∫éÂüéÂ∏ÇÁÉ≠Â≤õÊïàÂ∫îÁöÑË∑®ÂüéÂ∏ÇÊØîËæÉÁ†îÁ©∂ÔºåÂ∏åÊúõÊâæÂà∞ÊúâÁõ∏ÂÖ≥Êï∞ÊçÆÂíåÁªèÈ™åÁöÑÁ†îÁ©∂‰ºô‰º¥...', tags: ['ÂüéÂ∏ÇÊ∞îÂÄô', 'ÁÉ≠Â≤õÊïàÂ∫î', 'Âêà‰Ωú', 'Â§öÂ∞∫Â∫¶ÂàÜÊûê'], timestamp: '4Â∞èÊó∂Ââç', likes: 18, comments: 12, shares: 3, views: 89, hasCode: false, hasData: false, type: 'collaboration' },
        { id: 3, author: { name: 'ÁéãÁ†îÁ©∂Áîü', avatar: 'üéì', affiliation: 'Ê∏ÖÂçéÂ§ßÂ≠¶', level: 'ÂçöÂ£´Áîü' }, title: 'ÂºÄÊ∫êÂèëÂ∏ÉÔºöQGISËá™Âä®ÂåñÂ§ÑÁêÜÂ∑•ÂÖ∑ÂåÖ', content: 'ÁªèËøáÂçäÂπ¥ÂºÄÂèëÔºåÊàë‰ª¨ÁöÑQGISËá™Âä®ÂåñÂ§ÑÁêÜÂ∑•ÂÖ∑ÂåÖÁªà‰∫éÂºÄÊ∫ê‰∫ÜÔºÅÂåÖÂê´20+Â∏∏Áî®Á©∫Èó¥ÂàÜÊûêÁÆóÊ≥ïÁöÑPythonÂÆûÁé∞...', tags: ['QGIS', 'ÂºÄÊ∫ê', 'Python', 'Á©∫Èó¥ÂàÜÊûê'], timestamp: '1Â§©Ââç', likes: 42, comments: 15, shares: 28, views: 234, hasCode: true, hasData: false, type: 'tool' }
    ]);

    const [conferences, setConferences] = useState([
        { id: 1, name: 'GeoSpatial 2025', date: '2025-09-15', location: 'Âåó‰∫¨', type: 'ÂõΩÈôÖ‰ºöËÆÆ', deadline: '2025-07-01', attendees: 1200 },
        { id: 2, name: '‰∏≠ÂõΩGISÂ≠¶ÊúØÂπ¥‰ºö', date: '2025-11-20', location: '‰∏äÊµ∑', type: 'ÂõΩÂÜÖ‰ºöËÆÆ', deadline: '2025-08-15', attendees: 800 }
    ]);

    const [experts, setExperts] = useState([
        { id: 1, name: 'ÈôàÈô¢Â£´', avatar: 'üèÜ', affiliation: '‰∏≠ÁßëÈô¢', specialization: 'ÈÅ•ÊÑü‰∏éGIS', followers: 2341, papers: 156, hIndex: 45 },
        { id: 2, name: 'ÂàòÊïôÊéà', avatar: 'üéØ', affiliation: 'ÂåóÂ∏àÂ§ß', specialization: 'Á©∫Èó¥ÂàÜÊûê', followers: 1823, papers: 89, hIndex: 32 }
    ]);

    const [discussions, setDiscussions] = useState([
        { id: 1, title: 'GDALÂ§ÑÁêÜÂ§ßËßÑÊ®°Ê†ÖÊ†ºÊï∞ÊçÆÁöÑÊúÄ‰Ω≥ÂÆûË∑µ', author: 'ÊäÄÊúØËææ‰∫∫', replies: 23, lastActivity: '30ÂàÜÈíüÂâç', tags: ['GDAL', 'Â§ßÊï∞ÊçÆ', 'Ê†ÖÊ†ºÂ§ÑÁêÜ'] },
        { id: 2, title: 'ÂÖ≥‰∫éÁ©∫Èó¥Ëá™Áõ∏ÂÖ≥ÂàÜÊûêÁöÑÂèÇÊï∞ÈÄâÊã©ÈóÆÈ¢ò', author: 'Á©∫Èó¥ÂàÜÊûêÊñ∞Êâã', replies: 15, lastActivity: '1Â∞èÊó∂Ââç', tags: ['Á©∫Èó¥Ëá™Áõ∏ÂÖ≥', 'Moran I', 'ÂèÇÊï∞ÈÄâÊã©'] }
    ]);

    const [datasets, setDatasets] = useState([
        { id: 1, title: 'ÂÖ®ÁêÉÂüéÂ∏ÇÂª∫Á≠ëË∂≥ËøπÊï∞ÊçÆÈõÜ', description: 'ÂåÖÂê´ÂÖ®ÁêÉ‰∏ªË¶ÅÂüéÂ∏ÇÁöÑÂª∫Á≠ëËΩÆÂªìÁü¢ÈáèÊï∞ÊçÆÔºåÁ≤æÂ∫¶ËææÂà∞Âª∫Á≠ëÁ∫ßÂà´ÔºåË¶ÜÁõñ200+ÂüéÂ∏Ç...', author: '‰∏≠ÁßëÈô¢ÈÅ•ÊÑüÊâÄ', size: '2.3 GB', format: ['Shapefile', 'GeoJSON', 'PostGIS'], tags: ['ÂüéÂ∏Ç', 'Âª∫Á≠ë', 'Áü¢Èáè', 'ÂÖ®ÁêÉ'], downloads: 1243, likes: 89, lastUpdated: '2025-05-15', license: 'CC BY 4.0', category: 'vector', quality: 4.8, documentation: true },
        { id: 2, title: '‰∏≠ÂõΩÂúüÂú∞Ë¶ÜÁõñÂèòÂåñÊó∂Èó¥Â∫èÂàó(2000-2020)', description: 'Âü∫‰∫éLandsatÂΩ±ÂÉèÁîüÊàêÁöÑ‰∏≠ÂõΩÂúüÂú∞Ë¶ÜÁõñÂàÜÁ±ªÊï∞ÊçÆÔºåÊó∂Èó¥Ë∑®Â∫¶20Âπ¥ÔºåÂåÖÂê´10‰∏™‰∏ªË¶ÅÁ±ªÂà´...', author: 'Âåó‰∫¨Â∏àËåÉÂ§ßÂ≠¶', size: '850 MB', format: ['GeoTIFF', 'NetCDF'], tags: ['ÂúüÂú∞Ë¶ÜÁõñ', 'Êó∂Èó¥Â∫èÂàó', '‰∏≠ÂõΩ', 'Ê†ÖÊ†º'], downloads: 892, likes: 67, lastUpdated: '2025-04-20', license: 'CC BY-SA 4.0', category: 'raster', quality: 4.6, documentation: true },
        { id: 3, title: 'OpenStreetMapÈÅìË∑ØÁΩëÁªúÊèêÂèñÂ∑•ÂÖ∑', description: 'Ëá™Âä®‰ªéOSMÊï∞ÊçÆÊèêÂèñÂíåÊ∏ÖÁêÜÈÅìË∑ØÁΩëÁªúÁöÑPythonÂ∑•ÂÖ∑ÂåÖÔºåÊîØÊåÅÊãìÊâëÊ£ÄÊü•ÂíåÁΩëÁªúÂàÜÊûê...', author: 'Ê∏ÖÂçéÂ§ßÂ≠¶‰∫§ÈÄöÂ≠¶Èô¢', size: '45 MB', format: ['Python Package', 'Jupyter Notebook'], tags: ['ÈÅìË∑ØÁΩëÁªú', 'OSM', 'Python', 'Â∑•ÂÖ∑'], downloads: 456, likes: 34, lastUpdated: '2025-06-10', license: 'MIT', category: 'tool', quality: 4.7, documentation: true }
    ]);

    // +++ 3. Êñ∞Â¢ûÔºö‰∏∫Êé®ËçêÁ≥ªÁªüÂàõÂª∫Ê®°Êãü(Mock)Êï∞ÊçÆ +++
    const [recommendations, setRecommendations] = useState({
        paper: { title: 'ÂüéÂ∏ÇÊâ©Âº†ÂØπÁîüÁâ©Â§öÊ†∑ÊÄßÁöÑÊó∂Á©∫ÂΩ±ÂìçÂàÜÊûê', id: 101 },
        expert: { name: 'ËµµÁ†îÁ©∂Âëò', affiliation: 'ÂêåÊµéÂ§ßÂ≠¶', id: 102 },
        dataset: { title: '1990-2020Âπ¥Èïø‰∏âËßíÂüéÂ∏ÇÊâ©Âº†ËæπÁïåÊï∞ÊçÆ', id: 103 },
    });
    const [potentialCollaborators, setPotentialCollaborators] = useState([
        { id: 201, name: 'Â≠ôÂçöÂ£´', avatar: 'üî¨', specialization: 'Êó∂Á©∫Â§ßÊï∞ÊçÆÂàÜÊûê' },
        { id: 202, name: 'Èí±ÂêåÂ≠¶', avatar: 'üéì', specialization: 'ÂúüÂú∞Âà©Áî®ÂèòÂåñÊ®°Êãü' },
    ]);
    const [knowledgeGraph, setKnowledgeGraph] = useState([
        'ÂüéÂ∏ÇÂåñ', 'ÂúüÂú∞Âà©Áî®', 'ÁîüÊÄÅÁ≥ªÁªüÊúçÂä°', 'ÈÅ•ÊÑüÁõëÊµã', 'Êó∂Á©∫ÂàÜÊûê', 'CA-MarkovÊ®°Âûã'
    ]);

    const toggleLike = (postId) => {
        setPosts(prev => prev.map(post =>
            post.id === postId
                ? { ...post, likes: post.likes + 1 }
                : post
        ));
    };

    const tabs = [
        { id: 'feed', name: 'Â≠¶ÊúØÂä®ÊÄÅ', icon: TrendingUp },
        { id: 'experts', name: '‰∏ìÂÆ∂Â≠¶ËÄÖ', icon: Award },
        { id: 'conferences', name: '‰ºöËÆÆ‰ø°ÊÅØ', icon: Calendar },
        { id: 'discussions', name: 'Â≠¶ÊúØËÆ®ËÆ∫', icon: MessageCircle },
        { id: 'datasets', name: 'ÂºÄÊ∫êÊï∞ÊçÆÂ∫ì', icon: Database },
        // === Êñ∞Â¢ûÁöÑÈ°∂Á∫ßÂÖ•Âè£ ===
        { id: 'projects', name: 'Âçè‰ΩúÁ©∫Èó¥', icon: Briefcase },
    ];

    // 4. Êõ¥Êñ∞ÂØºËà™ÊåâÈíÆÁöÑÁÇπÂáªÈÄªËæë
    const handleNavClick = (tabId) => {
        // Á¨¨‰∏ÄÊ≠•ÔºöÊó†ËÆ∫ÁÇπÂáªÂì™‰∏™ÔºåÈÉΩÁ´ãÂàªÊõ¥Êñ∞ activeTab ÁöÑÁä∂ÊÄÅ
        setActiveTab(tabId);

        // Á¨¨‰∫åÊ≠•ÔºöÊ†πÊçÆ tabId ÂÜ≥ÂÆöË¶ÅË∑≥ËΩ¨Âà∞Âì™‰∏™È°µÈù¢
        if (tabId === 'projects') {
            setCurrentPage('projectDashboard');
        } else {
            // ÂÖ∂‰ªñÊâÄÊúâtabÈÉΩÈìæÊé•Âà∞‰∏ª‰ª™Ë°®Áõò
            setCurrentPage('dashboard');
        }
    };

    // 2. Êñ∞Â¢ûÁî®‰∫éÂØºËà™ÁöÑÂáΩÊï∞
    const handleEnterProject = (projectFromProfile) => {
        // Âú®ÁúüÂÆûÂ∫îÁî®‰∏≠ÔºåËøôÈáåÊÇ®‰ºöÊ†πÊçÆ project.id ‰ªéÂêéÁ´ØAPIËé∑ÂèñËØ¶ÁªÜÁöÑÈ°πÁõÆÊï∞ÊçÆ
        // Âú®Ê≠§ÔºåÊàë‰ª¨Áõ¥Êé•ÊûÑÂª∫‰∏Ä‰∏™‰∏∞ÂØåÁöÑÊ®°ÊãüÂØπË±°
        const detailedProjectData = {
            ...projectFromProfile, // ÁªßÊâøÂü∫Á°Ä‰ø°ÊÅØÔºåÂ¶Ç id, title
            description: projectFromProfile.description || '‰∏Ä‰∏™ÂÖ≥‰∫éÂüéÂ∏ÇÁÉ≠Â≤õÊïàÂ∫îÁöÑË∑®ÂüéÂ∏ÇÊØîËæÉÁ†îÁ©∂ÔºåÊó®Âú®Êé¢Á¥¢‰∏çÂêåÂ∞∫Â∫¶‰∏ãÁöÑÂΩ±ÂìçÂõ†Â≠ê„ÄÇ',
            visibility: 'Private',
            members: [
                { id: 'user1', name: 'ÈôàÈô¢Â£´', email: 'chen@example.com', avatar: 'üèÜ', role: 'Owner' },
                { id: 'user2', name: 'ÂàòÊïôÊéà', email: 'liu@example.com', avatar: 'üéØ', role: 'Editor' },
                { id: 'user3', name: 'Âº†ÂçöÂ£´', email: 'zhang@example.com', avatar: 'üë®‚Äçüè´', role: 'Editor' },
                { id: 'user4', name: 'ÁéãÁ†îÁ©∂Áîü', email: 'wang@example.com', avatar: 'üéì', role: 'Viewer' },
            ],
            // === Êñ∞Â¢ûÔºöÊñá‰ª∂ÁÆ°ÁêÜÁ≥ªÁªüÁöÑÊ®°ÊãüÊï∞ÊçÆ ===
            files: [
                { id: 'file1', name: 'ÊñáÁåÆÁªºËø∞-ÊúÄÁªàÁâà.pdf', type: 'PDF', size: '2.3 MB', uploadedBy: 'Âº†ÂçöÂ£´', uploadedAt: '2025-06-15' },
                { id: 'file2', name: 'ÂéüÂßãÊï∞ÊçÆÈõÜ.csv', type: 'CSV', size: '15.8 MB', uploadedBy: 'ÊùéÂçöÂ£´', uploadedAt: '2025-06-12' },
                { id: 'file3', name: 'Ê®°ÂûãÁªìÊûÑÂõæ.png', type: 'Image', size: '800 KB', uploadedBy: 'ÁéãÁ†îÁ©∂Áîü', uploadedAt: '2025-06-10' },
                { id: 'file4', name: 'È°πÁõÆ‰∏≠ÊúüÊä•Âëä.docx', type: 'DOCX', size: '450 KB', uploadedBy: 'Âº†ÂçöÂ£´', uploadedAt: '2025-05-20' },
            ]
            // ÂÖ∂‰ªñÈ°πÁõÆÂÜÖÈÉ®Êï∞ÊçÆÔºàÁúãÊùø„ÄÅÊñáÊ°£Á≠âÔºâ‰πüÂèØ‰ª•Âú®ËøôÈáåÂä†ËΩΩ
        };
        setActiveProject(detailedProjectData);
        setCurrentPage('projectSpace');
    };

    const handleExitProject = () => {
        setActiveProject(null);
        setCurrentPage('profile'); // ‰ªéÈ°πÁõÆÁ©∫Èó¥ËøîÂõûÂà∞‰∏™‰∫∫‰∏ªÈ°µ
    };

    const handleViewProfile = () => {
        setCurrentPage('profile');
    };

    const handleExitProfile = () => {
        if (activeTab === 'projects') {
            setCurrentPage('projectDashboard');
        }
        else {
            setCurrentPage('dashboard');
        }
    }

    const renderPageContent = () => {
        switch (currentPage) {
            case 'profile':
                return (
                    <main className="py-8 px-4">
                        <AcademicProfilePage
                            profileData={mockProfileData}
                            onBack={() => handleExitProfile()} // ‰ªé‰∏™‰∫∫‰∏ªÈ°µÂèØ‰ª•ËøîÂõû‰∏ª‰ª™Ë°®Áõò
                            onEnterProject={handleEnterProject}
                        />
                    </main>
                );
            case 'projectDashboard':
                return (
                    <main className="py-8 px-4">
                        <ProjectDashboardPage
                            projects={mockProfileData.projects}
                            onEnterProject={handleEnterProject}
                        />
                    </main>
                );
            case 'projectSpace':
                // È°πÁõÆÁ©∫Èó¥ÊòØÂÖ®Â±èÁöÑÔºåÂÆÉ‰ºöÊõøÊç¢ÊéâÊâÄÊúâÂÜÖÂÆπÔºåÊâÄ‰ª•ÂÆÉÁöÑÊ∏≤ÊüìÈÄªËæëÊòØÁâπÊÆäÁöÑ
                return (
                    <ProjectSpacePage
                        project={activeProject}
                        onExit={() => setCurrentPage('profile')} // ‰ªéÈ°πÁõÆÁ©∫Èó¥ËøîÂõûÂà∞‰∏™‰∫∫‰∏ªÈ°µ
                    />
                );
            case 'accountSettings':
                return (
                    <main className="py-8 px-4">
                        <AcademicProfilePage onBack={() => setCurrentPage('profile')} />
                    </main>
                );
            case 'dashboard':
            default:
                return (
            <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
                <div className="grid grid-cols-1 lg:grid-cols-4 gap-8">
                    {/* Main Content Area */}
                    <div className="lg:col-span-3">
                        {activeTab === 'feed' && <FeedComponent posts={posts} selectedFilter={selectedFilter} setSelectedFilter={setSelectedFilter} toggleLike={toggleLike} />}
                        {activeTab === 'experts' && <ExpertsComponent experts={experts} />}
                        {activeTab === 'conferences' && <ConferencesComponent conferences={conferences} />}
                        {activeTab === 'discussions' && <DiscussionsComponent discussions={discussions} />}
                        {activeTab === 'datasets' && <DatasetsComponent datasets={datasets} />}
                    </div>

                    {/* Sidebar */}
                    <aside className="lg:col-span-1 space-y-6">
                        {/* +++ 4. ‰ΩøÁî®Êñ∞ÁöÑÊé®ËçêÁªÑ‰ª∂ÊõøÊç¢ÊóßÁöÑÁªÑ‰ª∂ +++ */}
                        <RecommendationSidebar
                            recommendations={recommendations}
                            collaborators={potentialCollaborators}
                            knowledgeGraph={knowledgeGraph}
                        />

                        {/* Quick Stats */}
                        <div className="bg-white rounded-lg shadow-sm border p-4">
                            <h3 className="font-semibold text-gray-800 mb-3">Á§æÂå∫ÁªüËÆ°</h3>
                            <div className="space-y-3">
                                <div className="flex justify-between text-sm">
                                    <span className="text-gray-600">Ê¥ªË∑ÉÁ†îÁ©∂ËÄÖ</span>
                                    <span className="font-medium">12,453</span>
                                </div>
                                <div className="flex justify-between text-sm">
                                    <span className="text-gray-600">‰ªäÊó•ÂèëÂ∏ñ</span>
                                    <span className="font-medium">156</span>
                                </div>
                                <div className="flex justify-between text-sm">
                                    <span className="text-gray-600">ÂºÄÊ∫êÊï∞ÊçÆÈõÜ</span>
                                    <span className="font-medium">1,245</span>
                                </div>
                                <div className="flex justify-between text-sm">
                                    <span className="text-gray-600">Êú¨Âë®‰∏ãËΩΩ</span>
                                    <span className="font-medium">3,892</span>
                                </div>
                                <div className="flex justify-between text-sm">
                                    <span className="text-gray-600">ËøõË°å‰∏≠Âêà‰Ωú</span>
                                    <span className="font-medium">234</span>
                                </div>
                            </div>
                        </div>

                        {/* Trending Topics */}
                        <div className="bg-white rounded-lg shadow-sm border p-4">
                            <h3 className="font-semibold text-gray-800 mb-3">ÁÉ≠Èó®ËØùÈ¢ò</h3>
                            <div className="space-y-2">
                                {['#Ê∑±Â∫¶Â≠¶‰π†GIS', '#ÂºÄÊ∫êÂ∑•ÂÖ∑', '#ÂüéÂ∏ÇÂàÜÊûê', '#ÈÅ•ÊÑüÂ∫îÁî®', '#Á©∫Èó¥Â§ßÊï∞ÊçÆ'].map((topic) => (
                                    <div key={topic} className="flex items-center justify-between text-sm">
                                        <span className="text-blue-600 hover:text-blue-800 cursor-pointer">{topic}</span>
                                        <span className="text-gray-500">{Math.floor(Math.random() * 100) + 20}</span>
                                    </div>
                                ))}
                            </div>
                        </div>

                        {/* Recent Activity */}
                        <div className="bg-white rounded-lg shadow-sm border p-4">
                            <h3 className="font-semibold text-gray-800 mb-3">ÊúÄÊñ∞Âä®ÊÄÅ</h3>
                            <div className="space-y-3 text-sm">
                                <div className="flex items-start space-x-2">
                                    <div className="w-2 h-2 bg-blue-500 rounded-full mt-2"></div>
                                    <div>
                                        <p className="text-gray-700">Âº†ÊïôÊéàÂàÜ‰∫´‰∫ÜÊñ∞ÁöÑÁ†îÁ©∂ÊàêÊûú</p>
                                        <p className="text-gray-500 text-xs">5ÂàÜÈíüÂâç</p>
                                    </div>
                                </div>
                                <div className="flex items-start space-x-2">
                                    <div className="w-2 h-2 bg-green-500 rounded-full mt-2"></div>
                                    <div>
                                        <p className="text-gray-700">ÊùéÂçöÂ£´ÂèëËµ∑‰∫ÜÂêà‰ΩúÈÇÄËØ∑</p>
                                        <p className="text-gray-500 text-xs">15ÂàÜÈíüÂâç</p>
                                    </div>
                                </div>
                                <div className="flex items-start space-x-2">
                                    <div className="w-2 h-2 bg-purple-500 rounded-full mt-2"></div>
                                    <div>
                                        <p className="text-gray-700">Êñ∞Áî®Êà∑ÁéãÁ†îÁ©∂ÁîüÂä†ÂÖ•Á§æÂå∫</p>
                                        <p className="text-gray-500 text-xs">1Â∞èÊó∂Ââç</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </aside>
                </div>
            </main>
            )
    }
}

    return (
        <div className="min-h-screen bg-gray-50">
            {/* Header */}
            <header className="bg-white shadow-sm border-b sticky top-0 z-50">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div className="flex justify-between items-center h-16">
                        <div className="flex items-center space-x-4">
                            <div className="bg-gradient-to-r from-blue-500 to-green-500 w-10 h-10 rounded-lg flex items-center justify-center">
                                <Globe className="w-6 h-6 text-white" />
                            </div>
                            <div>
                                <h1 className="text-xl font-bold text-gray-900">GISÂ≠¶ÊúØÁ§æÂå∫</h1>
                                <p className="text-sm text-gray-500">ËøûÊé•ÂÖ®ÁêÉGISÁ†îÁ©∂ËÄÖ</p>
                            </div>
                        </div>

                        <div className="flex items-center space-x-4">
                            <div className="relative">
                                <input
                                    type="text"
                                    placeholder="ÊêúÁ¥¢Á†îÁ©∂ËÄÖ„ÄÅËÆ∫Êñá„ÄÅ‰ºöËÆÆ..."
                                    value={searchQuery}
                                    onChange={(e) => setSearchQuery(e.target.value)}
                                    className="pl-10 pr-4 py-2 w-80 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                />
                                <Search className="absolute left-3 top-2.5 w-4 h-4 text-gray-400" />
                            </div>

                            <button className="relative p-2 text-gray-500 hover:text-gray-700 hover:bg-gray-100 rounded-lg transition-colors">
                                <Bell className="w-5 h-5" />
                                <span className="absolute top-0 right-0 w-2 h-2 bg-red-500 rounded-full"></span>
                            </button>

                            {/* ‰øÆÊîπÂ§¥ÂÉèÔºåÊ∑ªÂä†ÁÇπÂáª‰∫ã‰ª∂ */}
                            <button onClick={handleViewProfile} className="w-8 h-8 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full flex items-center justify-center text-white cursor-pointer">
                                üë§
                            </button>
                        </div>
                    </div>
                </div>
            </header>
            {/* Navigation */}
            <nav className="bg-white shadow-sm">
                <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div className="flex space-x-8">
                        {tabs.map(tab => (
                            <button
                                key={tab.id}
                                onClick={() => handleNavClick(tab.id)}
                                className={`flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm transition-colors ${
  activeTab === tab.id
      ? 'border-blue-500 text-blue-600'
      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
}`}
                            >
                                <tab.icon className="w-4 h-4" />
                                <span>{tab.name}</span>
                            </button>
                        ))}
                    </div>
                </div>
            </nav>
            {renderPageContent()}
        </div>
    );
};

export default GISAcademicPlatform;